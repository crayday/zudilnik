-----------------------------------------------------------------------------
2021.03.24

X use cur.commit() in Zudilnik methods instead of parse_command()

-----------------------------------------------------------------------------
2021.04.11

X command "worked" for calculating work hours on some goal or task
X replaced some format() strings with f-strings

-----------------------------------------------------------------------------
2021.04.12

X support short dates in "worked" command like "11" in april instead of "2021-04-11"

-----------------------------------------------------------------------------
2021.04.21

X in restart command comment is a second argument

-----------------------------------------------------------------------------
2021.06.10

* supported commands in a format "set project <PROJECT> <COMMENT>"

-----------------------------------------------------------------------------
2021.06.16

* cmdrun: use cmd module for better command line experience
* add "comment" command to new cmdrun
* move commands start,restart,delete,set to cmdrun

-----------------------------------------------------------------------------
2021.06.17

* add eval to commands executions (otherwise it shuts down on a single exception)
* move "worked" command to cmdrun

-----------------------------------------------------------------------------
2021.06.19

* moved all other commands to cmdrun
* implemented shortcuts to command with do_SHORTCUT
* implemented the single command (from argv) execution mode for cmdrun

-----------------------------------------------------------------------------
2022.04.19

* make <TAB> work for autocompletion of "project" parameter of "start" command
  * create complete_start function
  * determine parameter's order number
  * if it's 1st parameter (project) search for "<text>%" project name in db
  * otherwise return empty list
* + autocompletion for 'set' command

-----------------------------------------------------------------------------
2022.06.14

* fixed autocompletion to work properly when completing a not last argument

-----------------------------------------------------------------------------
TODO 

* autocompletion for the "ls" command
* autocompletion for the "hpd" command
* get rid of Zudilnik "comment_last_record" method at all
  * in "comment_record" method rename record_id to smth like record_identificator
  * if record_identificator > 0 then all goes as it goes
  * if record_identificator <= 0 then we get record like last, penult, penpenult etc
* implement prelast (penult), preprelast (penpenult) etc.
  (in commands like "set", "comment")
* alternative command like "worked" but for projects/subprojects instead of goals
* command for counting total duration of some subproject in an interval
  like "2020-02-19" for single day
  or "2020-02-12 2020-02-19" for week
  or "2020-02" for month
  E.g.:
  select sum(duration)/3600.0 from timelog where subproject_id in (select id from subprojects where project_id = (select id from projects where name = "litres")) and started_at between strftime('%s',"2020-08-18 07:15:00+03:00") and strftime('%s',"2020-08-19 07:15:00+03:00");
  ***
  select sum(duration)/3600.0 from timelog where subproject_id = (select id from subprojects where name = "d20prog") and started_at between strftime('%s',"2021-06-23 00:00:00+03:00") and strftime('%s',"2021-06-24 00:00:00+03:00");
* command that will print every project that was working on during a given period of time
  and time spent on it
* in the 'goalinfo' command output data about how much worked this week
  (from monday), this month (from 1st day of month)
* in the 'goalinfo' command output data about 7 days (worked x/y hours)
* support short dates in "hoursperday" command
* get rid of subprojects, leave only projects.
  - create projects.parent field
  - add field timelog.project_id with corresponding key
  - make a script that will go for each subproject and:
    * create corresponding projects record (with same projects.parent value as in subprojects.parent)
    * fill timelog.project_id field with new ID for all timelog.subproject_id = <OLD_ID>
  - remove field.timelog.subproject_id field
  - remove goals.subproject_id field
  - fix code
* ability to archive old subprojects.
  - add field archived_at
  - select old subprojects list this:
    | select distinct sp.id, sp.name
    | from subprojects sp
    |   left join timelog t on t.subproject_id = sp.id
    |     and t.started_at > strftime('%s', 'now') - 3600*24*30*2 -- 2 month
    | where sp.project_id = 1
    |   and t.id is null
    | group by sp.id;
* ability to archive goals like this:
  > archivegoal lt2020
  archivegoal|ag <GOALNAME>
* backup-db: add periodical_run.py to crontab (first run it each minute)
* backup-db: in periodical_run.py write helloworld to log
* backup-db: in periodical_run.py copypaste database to Dropbox
* backup-db: read backup path from config file
* countable goals
* day deadline
* add 'apply when' functionality to 'hoursperday' command
* deny immediate goal reduction
* get absolute path to database (to be able to run script outside of it's parent directory)
